/* Variáveis de Tema (Baseado na paleta Cifra Club + Dark Mode) */
:root {
    --bg-color-light: #f8f8f8; /* Fundo quase branco */
    --surface-color-light: #ffffff; /* Card/Componente branco */
    --text-color-light: #333333; /* Texto escuro */
    --text-secondary-light: #777777; /* Texto cinza */
    --accent-color-light: #ff8a00; /* Laranja Cifra Club */
    --accent-hover-light: #e67c00; /* Laranja mais escuro */
    --danger-color-light: #dc3545; /* Vermelho */
    --border-color-light: #dddddd; /* Borda cinza clara */
     --shadow-color-light: rgba(0, 0, 0, 0.1); /* Sombra leve */


    --bg-color-dark: #2a2a2a; /* Fundo cinza escuro */
    --surface-color-dark: #3a3a3a; /* Card/Componente cinza um pouco mais claro */
    --text-color-dark: #f0f0f0; /* Texto claro */
    --text-secondary-dark: #bbbbbb; /* Texto cinza claro */
    --accent-color-dark: #ffb347; /* Laranja mais claro para contraste no escuro */
    --accent-hover-dark: #ff9900; /* Laranja */
    --danger-color-dark: #ff6b81; /* Vermelho mais claro */
    --border-color-dark: #555555; /* Borda cinza escura */
     --shadow-color-dark: rgba(0, 0, 0, 0.3); /* Sombra mais pronunciada no escuro */


    --reader-font: "Consolas", "Courier New", Courier, monospace; /* Fonte monoespaçada */
    --chord-color-light: var(--accent-color-light); /* Acordes laranja */
    --chord-color-dark: var(--accent-color-dark);  /* Acordes laranja no dark mode */

     /* Variáveis padrão (serão sobrescritas pelas classes de tema) */
     --bg-color: var(--bg-color-light);
     --surface-color: var(--surface-color-light);
     --text-color: var(--text-color-light);
     --text-secondary: var(--text-secondary-light);
     --accent-color: var(--accent-color-light);
     --accent-hover: var(--accent-hover-light);
     --danger-color: var(--danger-color-light);
     --border-color: var(--border-color-light);
     --shadow-color: var(--shadow-color-light);
     --chord-color: var(--chord-color-light);

     /* Altura dos elementos fixos */
     --header-height: 60px;
     --footer-height: 60px;
     --reader-bottom-controls-height: 60px; /* Nova variável para a barra inferior do reader */

     /* Nota: env(safe-area-inset-*) valores são primariamente úteis para PWAs adicionadas à tela inicial */
     /* Em abas regulares do navegador, eles podem ser 0 ou menos previsíveis. */
     /* Adicionamos um pequeno buffer (ex: 15px) no calc() para garantir um espaçamento mínimo */
     /* mesmo se safe-area-inset-top for 0. */
     --safe-area-top-buffer: 15px; /* Buffer extra no topo em mobile */
     --safe-area-bottom-buffer: 10px; /* Buffer extra na parte inferior (ex: sob a barra de rolagem do reader) */
}

/* Classes de Tema */
/* --- MODIFICAÇÃO CRUCIAL AQUI: Mudar 'body' para '#app' --- */
#app.theme-light {
    --bg-color: var(--bg-color-light);
    --surface-color: var(--surface-color-light);
    --text-color: var(--text-color-light);
    --text-secondary: var(--text-secondary-light);
    --accent-color: var(--accent-color-light);
    --accent-hover: var(--accent-hover-light);
    --danger-color: var(--danger-color-light);
    --border-color: var(--border-color-light);
    --shadow-color: var(--shadow-color-light);
    --chord-color: var(--chord-color-light);
}

#app.theme-dark {
    --bg-color: var(--bg-color-dark);
    --surface-color: var(--surface-color-dark);
    --text-color: var(--text-color-dark);
    --text-secondary: var(--text-secondary-dark);
    --accent-color: var(--accent-color-dark);
    --accent-hover: var(--accent-hover-dark);
    --danger-color: var(--danger-color-dark);
    --border-color: var(--border-color-dark);
    --shadow-color: var(--shadow-color-dark);
    --chord-color: var(--chord-color-dark);
}

/* Garante que o body use as variáveis definidas no #app */
body {
    margin: 0;
    font-family: sans-serif;
    /* Use as variáveis que agora são definidas em #app */
    background-color: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s, color 0.3s;
    overflow: hidden; /* Gerenciado pelas telas */
     /* Use safe-area-inset para padding do body em fullscreen PWAs, mas aqui vamos ajustar o conteúdo interno */
     /* padding-top: env(safe-area-inset-top); */
     /* padding-bottom: env(safe-area-inset-bottom); */
}

#app {
    display: flex;
    flex-direction: column;
    height: 100vh;
    /* Add padding-bottom to make space for the fixed main footer */
     padding-bottom: var(--footer-height);
     box-sizing: border-box; /* Inclui padding na altura */
     /* --- Removido background/color daqui --- */
     /* Deixa o background e color serem definidos pelo body que usa as vars do #app */
}


.screen {
    width: 100%;
    height: 100%; /* Ocupa a altura total do #app (menos padding-bottom) */
    position: absolute; /* Posição absoluta para sobrepor */
    top: 0;
    left: 0;
    background-color: var(--bg-color); /* Já usa a variável, deve funcionar */
    overflow-y: auto; /* Cada screen rola seu próprio conteúdo (exceto reader) */
    transition: transform 0.3s ease-in-out;
    transform: translateX(100%);
     display: block; /* Usamos transform para a transição */
     /* Removed padding-top from here, handled by screen content */
     padding-top: 0; /* Let child content handle padding */
     padding-bottom: 0; /* Let child content handle padding */
     box-sizing: border-box;
}

.screen.active {
     transform: translateX(0);
}

.screen:not(.active) {
    display: none; /* Esconde completamente quando não está ativo */
}

/* Componentes Visuais (Card, Button, Input) - Estilo Cifra Club */
.card {
    background: var(--surface-color); /* Já usa a variável, deve funcionar */
    border-radius: 8px; /* Cantos arredondados suaves */
    box-shadow: 0 2px 5px var(--shadow-color); /* Já usa a variável, deve funcionar */
    padding: 20px;
    margin: 20px; /* Margem externa padrão para desktop/tablet */
}

.button {
    padding: 10px 15px;
    border: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
    border-radius: 5px; /* Cantos arredondados */
    background-color: var(--surface-color); /* Já usa a variável, deve funcionar */
    color: var(--text-color); /* Já usa a variável, deve funcionar */
    cursor: pointer;
    font-size: 1em;
    transition: background-color 0.2s, border-color 0.2s, box-shadow 0.2s;
}

.button:hover {
    background-color: var(--bg-color); /* Já usa a variável, deve funcionar */
    border-color: var(--text-secondary); /* Já usa a variável, deve funcionar */
}

.button:active {
     background-color: var(--border-color); /* Já usa a variável, deve funcionar */
     box-shadow: inset 0 1px 3px var(--shadow-color); /* Já usa a variável, deve funcionar */
}

.button.accent {
    background-color: var(--accent-color); /* Já usa a variável, deve funcionar */
    color: white; /* White text on accent, doesn't change with theme */
    border-color: var(--accent-color); /* Já usa a variável, deve funcionar */
}
.button.accent:hover {
    background-color: var(--accent-hover); /* Já usa a variável, deve funcionar */
    border-color: var(--accent-hover); /* Já usa a variável, deve funcionar */
}
.button.accent:active {
    background-color: var(--accent-color); /* Já usa a variável, deve funcionar */
    box-shadow: inset 0 1px 3px var(--shadow-color); /* Já usa a variável, deve funcionar */
}

.button.danger {
    background-color: var(--danger-color); /* Já usa a variável, deve funcionar */
     color: white; /* White text on danger, doesn't change with theme */
     border-color: var(--danger-color); /* Já usa a variável, deve funcionar */
}
.button.danger:hover {
     background-color: #c82333; /* Cor fixa, ajustar para variável se desejar */
     border-color: #bd2130; /* Cor fixa, ajustar para variável se desejar */
}
.button.danger:active {
     background-color: var(--danger-color); /* Já usa a variável, deve funcionar */
     box-shadow: inset 0 1px 3px var(--shadow-color); /* Já usa a variável, deve funcionar */
}

.button.icon-button {
    padding: 8px; /* Menor para botões só com ícone */
    display: inline-flex; /* Permite centralizar ícone */
    align-items: center;
    justify-content: center;
}

.button.full-width {
     display: block;
     width: 100%;
     box-sizing: border-box;
}

input[type="text"],
input[type="password"],
input[type="number"],
input[type="date"],
select {
    padding: 10px 15px;
    border: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
    border-radius: 5px;
    color: var(--text-color); /* Já usa a variável, deve funcionar */
    background-color: var(--surface-color); /* Já usa a variável, deve funcionar */
    font-size: 1em;
    box-sizing: border-box; /* Inclui padding na largura/altura */
    transition: border-color 0.2s, box-shadow 0.2s;
}

input[type="text"]::placeholder,
input[type="password"]::placeholder {
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
}

input:focus, select:focus {
    outline: none;
    border-color: var(--accent-color); /* Já usa a variável, deve funcionar */
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.2); /* Sombra fixa, ajustar se desejar */
}


/* Layout Geral de Telas */
/* #main-app now fills the height below the fixed header and above the fixed footer */
#main-app {
    display: flex;
    flex-direction: column;
    height: 100%; /* Ocupa 100% da altura de .screen */
    box-sizing: border-box;
     /* Add padding-top to clear the fixed header */
     padding-top: var(--header-height);
     /* No padding-bottom needed here, #app handles it */
     padding-bottom: 0;
}

.main-header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--header-height);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 15px;
    box-sizing: border-box;
    z-index: 10;
     background: var(--surface-color); /* Já usa a variável, deve funcionar */
    box-shadow: 0 2px 5px var(--shadow-color); /* Já usa a variável, deve funcionar */
     /* Consider adding safe area inset to top if header is fixed top:0 */
     padding-top: env(safe-area-inset-top);
     height: calc(var(--header-height) + env(safe-area-inset-top)); /* Adjust height to include safe area */
}

.main-header h1 {
    margin: 0;
    font-size: 1.2em;
    flex-grow: 1;
    text-align: center;
    /* Esconde título se ele for muito grande e colidir com botões */
     white-space: nowrap;
     overflow: hidden;
     text-overflow: ellipsis;
     padding: 0 10px;
}

.main-header .button {
     margin: 0 5px;
}

/* #screen-content is the scrollable area within main-app */
#screen-content {
    flex-grow: 1;
    overflow-y: auto; /* Conteúdo interno rolável */
     /* Removed padding-top from here, parent #main-app handles it */
     padding-top: 10px; /* Original margin */
     /* Add padding-bottom to make space for the fixed bottom nav */
     padding-bottom: var(--footer-height); /* Space for bottom nav */
     box-sizing: border-box; /* Include padding in height calculation */
}


.screen-page {
     display: none;
     padding: 0 10px; /* Padding horizontal padrão para o conteúdo das páginas */
     /* Removed padding-bottom from here */
}

.screen-page.active {
     display: block;
}

.list {
    list-style: none;
    padding: 0;
    margin: 0; /* Listas dentro de cards já tem margem externa no card */
}

.list li {
    padding: 15px;
    border-bottom: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
    cursor: pointer;
    transition: background-color 0.2s;
    color: var(--text-color); /* Já usa a variable for default color */
    position: relative;
    display: flex; /* Para alinhar conteúdo e ações */
    justify-content: space-between;
    align-items: center;
}

.list li:last-child {
     border-bottom: none; /* Remove borda do último item */
}

.list li:hover {
     background-color: var(--bg-color); /* Já usa a variável, deve funcionar */
}

.list .song-info {
    flex-grow: 1;
    margin-right: 10px;
}
.list .song-info h3 {
     margin: 0 0 5px 0;
     font-size: 1.1em;
     color: var(--text-color); /* Já usa a variável, deve funcionar */
}
.list .song-info p {
     margin: 0;
     font-size: 0.9em;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
}
.list .item-actions .button {
     padding: 5px; /* Botões menores nas ações da lista */
}

.list-empty-message {
     padding: 20px;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
     text-align: center;
}


/* Login Screen */
#login-screen {
    /* Login screen não tem header/footer principal, ocupa 100vh e é centralizado */
     padding-top: 0; /* Remove padding adicionado em .screen */
     padding-bottom: 0; /* Ensure no padding-bottom from #app */
     display: flex; /* Garante que a tela de login use flexbox para centralizar */
     justify-content: center;
     align-items: center;
     /* Sobrescreve overflow-y: auto do .screen para esconder scrollbar se loginbox for menor que a tela */
     overflow-y: hidden;
}

.login-container {
    max-width: 400px;
    width: 100%;
    text-align: center;
    margin: 20px; /* Adiciona margem caso a tela seja pequena */
}

.login-container h1 {
    margin-top: 0;
    margin-bottom: 10px;
    color: var(--accent-color); /* Já usa a variável, deve funcionar */
}
.login-container p {
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
     margin-bottom: 20px;
}

.input-group {
    margin-bottom: 15px;
    text-align: left;
    display: flex;
    flex-direction: column;
}
.input-group label {
     font-size: 0.9em;
     margin-bottom: 5px;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
}
.input-group input {
    width: 100%;
}

.login-container .button {
    width: 100%;
    padding: 12px 20px;
    font-size: 1.1em;
    margin-top: 10px;
}

.error-message {
     color: var(--danger-color); /* Já usa a variável, deve funcionar */
     margin-top: 10px;
     font-size: 0.9em;
}


/* Biblioteca Screen */
.search-bar {
    margin: 10px 10px 20px 10px; /* Margem ajustada para alinhar com padding da screen-page */
    display: flex;
    align-items: center;
    border: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
    border-radius: 5px;
    padding: 5px 10px; /* Padding interno */
    background-color: var(--surface-color); /* Já usa a variável, deve funcionar */
}
.search-bar i {
     margin-right: 10px;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
}
.search-bar input {
    flex-grow: 1;
    border: none;
    outline: none;
    background: transparent;
    color: var(--text-color); /* Já usa a variável, deve funcionar */
    padding: 0;
}

#library-list.card {
     margin-top: 0; /* Card da lista não precisa de margem dupla com search-bar */
     padding: 0; /* Listas dentro de card podem não precisar de padding interno extra */
}

.fab {
    position: fixed;
    /* Ajustado para ficar acima do footer e respeitar safe area bottom */
    bottom: calc(var(--footer-height) + 10px + env(safe-area-inset-bottom)); /* Altura do footer + margem + safe area bottom */
    right: 20px;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5em;
    z-index: 5;
    padding: 0;
     box-shadow: 0 3px 8px var(--shadow-color); /* Já usa a variável, deve funcionar */
     border: none; /* FAB geralmente sem borda */
}


/* Ensaios Screen */
.page-actions {
     margin: 10px; /* Margem ajustada para alinhar com padding da screen-page */
     display: flex;
     gap: 10px;
     flex-wrap: wrap; /* Permite que os botões quebrem a linha em telas menores */
     align-items: center; /* Alinha botões verticalmente */
     /* Permite que o full-width button ocupe a linha inteira em page-actions */
     width: calc(100% - 20px); /* Ajusta largura para padding de 10px da screen-page */
}
.page-actions .button {
     padding: 8px 15px;
}

/* Garante que o full-width button dentro de page-actions funcione */
.page-actions .button.full-width {
    width: 100%;
    display: block; /* override inline-flex de icon-button se aplicável */
}


#events-list.card {
      margin-top: 0; /* Card da lista não precisa de margem dupla com page-actions */
     padding: 0;
}


/* Event Detail */
/* Ajustes para alinhar com o padding da screen-page */
#event-detail-screen-content > .button { /* Botão voltar no detalhe */
     margin: 10px 0 10px 10px;
}
#event-detail-screen-content h2,
#event-detail-screen-content p {
     margin-left: 10px; /* Alinhar com padding da screen-page */
     margin-right: 10px;
}
#event-detail-screen-content h2 {
     margin-bottom: 5px;
     font-size: 1.3em;
     color: var(--text-color); /* Já usa a variável, deve funcionar */
}
#event-detail-screen-content p {
     margin-top: 0;
     font-size: 1em;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
     margin-bottom: 15px;
}

#event-songs-list.card {
    margin-top: 0; /* Card da lista não precisa de margem dupla com page-actions */
     padding: 0;
}
/* .list-item-draggable style is inherited from .list li */


/* Settings Screen */
.settings-group {
     margin-bottom: 20px;
}
.settings-group h3 {
     margin-top: 0;
     border-bottom: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
     padding-bottom: 10px;
     margin-bottom: 15px;
     color: var(--text-color); /* Já usa a variável, deve funcionar */
}

.setting-item {
     display: flex;
     justify-content: space-between;
     align-items: center;
     margin-bottom: 15px;
     flex-wrap: wrap; /* Permite quebrar linha em telas menores */
}
.setting-item span {
     flex-grow: 1;
     margin-right: 10px;
     /* Em mobile, o span pode ocupar a linha inteira se necessário */
     min-width: 150px; /* Garante que o texto não fique muito apertado */
}
/* Ajuste inputs/selects dentro de setting-item */
.setting-item input[type="number"],
.setting-item select {
     padding: 5px 10px;
     font-size: 0.9em;
     width: auto; /* Reseta full-width */
     /* Em mobile, eles podem se alinhar abaixo do label ou span */
     flex-shrink: 0; /* Não deixa encolher */
}
.setting-item input[type="checkbox"] {
    margin-left: 10px;
    flex-shrink: 0; /* Não deixa encolher */
}
.setting-item .button {
    padding: 8px 15px;
    font-size: 0.9em;
    flex-shrink: 0; /* Não deixa encolher */
}

/* Reader Screen */
/* Reader screen is a flex column layout */
#reader-screen {
    /* Remove padding-top from here, parent #main-app/fixed header handles space */
    padding-top: 0;
    /* Add padding-bottom to make space for the fixed reader bottom controls bar (including safe area) */
     padding-bottom: calc(var(--reader-bottom-controls-height) + env(safe-area-inset-bottom));
    box-sizing: border-box;
     overflow-y: hidden; /* Gerenciado pelo #reader-content-area */
     display: flex;
     flex-direction: column; /* Layout principal do reader screen */
     position: absolute; /* Continua usando position absolute para a transição */
}

.reader-header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--header-height);
    display: flex;
    align-items: center;
    padding: 0 15px;
    box-sizing: border-box;
    z-index: 10;
     background: var(--surface-color); /* Já usa a variável, deve funcionar */
    box-shadow: 0 2px 5px var(--shadow-color); /* Já usa a variável, deve funcionar */
     /* Consider adding safe area inset to top if header is fixed top:0 */
     padding-top: env(safe-area-inset-top);
     height: calc(var(--header-height) + env(safe-area-inset-top)); /* Adjust height to include safe area */
}


.reader-header .button {
     margin: 0 5px;
}

.reader-title-info {
     flex-grow: 1;
     text-align: center;
     overflow: hidden;
     text-overflow: ellipsis;
     white-space: nowrap;
     padding: 0 10px;
}

.reader-title-info h2 {
    margin: 0;
    font-size: 1.1em;
    color: var(--text-color); /* Já usa a variável, deve funcionar */
    overflow: hidden;
    text-overflow: ellipsis;
}

.reader-title-info p {
    margin: 0;
    font-size: 0.8em;
    color: var(--text-secondary); /* Já usa a variável, deve funcionar */
     overflow: hidden;
    text-overflow: ellipsis;
}

/* Botão de toggle de controles (visível apenas em mobile) */
/* Por padrão, está escondido (desktop) */
.controls-toggle-mobile {
    display: none;
}

/* Layout da área de leitor (sidebar + content) */
.reader-layout {
     display: flex;
     flex-grow: 1; /* Preenche o espaço abaixo do header */
     overflow: hidden; /* Contém o scroll nas sub-áreas */
     padding: 10px; /* Add some internal padding to the layout itself */
     box-sizing: border-box;
     /* Add padding-top to push content below the header (including safe area) */
      padding-top: calc(var(--header-height) + env(safe-area-inset-top));
}

/* Sidebar de Controles (Desktop/Tablet) */
/* Por padrão, está visível (desktop) */
#reader-sidebar {
     width: 250px; /* Largura fixa da sidebar */
     flex-shrink: 0; /* Não deixa a sidebar diminuir */
     overflow-y: auto; /* Sidebar rolável se os controles forem muitos */
     margin: 0 10px 0 0; /* Margem à direita */
     padding: 15px; /* Padding interno */
     box-sizing: border-box;
     /* Card style já aplicado */
}
#reader-sidebar h3 {
     margin-top: 0;
     color: var(--text-color); /* Já usa a variável, deve funcionar */
     border-bottom: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
     padding-bottom: 10px;
     margin-bottom: 15px;
}

.control-group {
     margin-bottom: 20px;
}
.control-group h4 {
     margin: 0 0 10px 0;
     font-size: 1em;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
}
.control-row {
     display: flex;
     align-items: center;
     gap: 10px; /* Espaço entre itens da linha */
     margin-bottom: 8px; /* Espaço entre linhas de controle */
}

.control-row .button {
     padding: 8px 12px; /* Padding nos botões de controle */
}
/* Estilos para Slider, Input Numérico, Indicadores DENTRO DOS CONTROLES DO READER */
/* Usaremos classes para selecionar os elementos específicos */
.reader-speed-slider {
     flex-grow: 1; /* Slider ocupa espaço */
     margin: 0; /* Reseta margem padrão do slider */
     -webkit-appearance: none; /* Customização cross-browser do slider */
     appearance: none;
     height: 8px;
     background: var(--border-color); /* Já usa a variável, deve funcionar */
     outline: none;
     opacity: 0.7;
     transition: opacity .2s;
     border-radius: 4px;
}
.reader-speed-slider:hover {
     opacity: 1;
}
.reader-speed-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 15px;
  height: 15px;
  background: var(--accent-color); /* Já usa a variável, deve funcionar */
  border-radius: 50%;
  cursor: pointer;
}
.reader-speed-slider::-moz-range-thumb {
  width: 15px;
  height: 15px;
  background: var(--accent-color); /* Já usa a variável, deve funcionar */
  border-radius: 50%;
  cursor: pointer;
}

/* Estilo para o input numérico de velocidade */
.reader-speed-number-input {
     width: 50px; /* Largura fixa para o input number */
     padding: 5px 8px; /* Padding ajustado */
     text-align: center;
     font-size: 0.9em;
     border: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
     border-radius: 5px; /* Adicionado border-radius */
     color: var(--text-color); /* Já usa a variável, deve funcionar */
     background-color: var(--surface-color); /* Já usa a variável, deve funcionar */
}
/* Ajuste na linha de controle de velocidade para acomodar o input number */
.control-row.speed-control-row {
     gap: 5px; /* Diminui o gap para ter mais espaço */
}
.control-row.speed-control-row .reader-speed-slider {
     flex-grow: 1; /* Slider ocupa o máximo de espaço restante */
}


.reader-transpose-indicator,
.reader-font-size-indicator,
.reader-speed-value { /* Adicionado o span de velocidade aqui */
     padding: 5px 10px;
     border: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
     border-radius: 5px;
     background-color: var(--bg-color); /* Já usa a variável, deve funcionar */
     min-width: 30px; /* Largura mínima ajustada */
     text-align: center;
     font-size: 0.9em;
     color: var(--text-color); /* Já usa a variável, deve funcionar */
     display: inline-flex; /* Garante que o span se comporte como um bloco flexível */
     justify-content: center; /* Centraliza o texto */
     align-items: center; /* Centraliza verticalmente */
}

/* #reader-content-area is the scrollable text area */
#reader-content-area {
    flex-grow: 1; /* Preenche o espaço restante */
    overflow-y: auto; /* Torna APENAS a área do texto rolável */
    padding: 10px 15px; /* Padding interno (top, right, bottom, left) */
    /* Removed external margin, handled by reader-layout padding */
     background: var(--surface-color); /* Já usa a variável, deve funcionar */
     border-radius: 8px;
     box-shadow: 0 2px 5px var(--shadow-color); /* Já usa a variável, deve funcionar */
     box-sizing: border-box; /* Inclui padding/margin no cálculo do tamanho */
     /* Padding-top is handled by reader-layout. Adjust padding-bottom */
     padding-bottom: 15px; /* A small padding at the bottom when no bar is present */
}


#reader-text {
    font-family: var(--reader-font);
    font-size: 16px; /* Tamanho inicial, será ajustável */
    line-height: 1.6;
    white-space: pre-wrap; /* Mantém formatação TXT, mas quebra linha */
    word-wrap: break-word;
    margin: 0;
    color: var(--text-color); /* Já usa a variável, deve funcionar */
}

#reader-text .chord {
    color: var(--chord-color); /* Já usa a variável, deve funcionar */
    font-weight: bold;
}

/* Reader Controls Overlay (Mobile) */
/* By default, it's hidden and appears only on screens smaller than 768px via JS */
#reader-controls-overlay-mobile {
    /* Default overlay style - display: none */
    /* Position above reader bottom controls */
     z-index: 25; /* Abaixo dos modais */
     /* Adjust top and bottom to avoid covering system/browser UI */
     top: env(safe-area-inset-top, 0); /* Use safe area top, fallback to 0 */
     bottom: env(safe-area-inset-bottom, 0); /* Use safe area bottom, fallback to 0 */
     height: auto; /* Allow height to be determined by content/positioning */
     background: rgba(0, 0, 0, 0.6); /* Fundo do overlay, não muda com tema */
}
#reader-controls-overlay-mobile .controls-bar {
     position: absolute; /* Position relative to the overlay (which is relative to safe area) */
     bottom: var(--safe-area-bottom-buffer); /* Position relative to the bottom of the safe area */
     left: 10px;
     right: 10px;
     /* Adjust width to fit small screens */
     max-width: calc(100% - 20px);
     margin: 0 auto; /* Centraliza */
     padding: 15px;
     box-sizing: border-box;
     display: flex;
     flex-direction: column; /* Items in column in mobile overlay */
     gap: 15px; /* Space between control groups */
     z-index: 40; /* Above overlay and bottom control bar */
     box-shadow: 0 5px 15px var(--shadow-color); /* Já usa a variável, deve funcionar */
     border-radius: 8px;
     background: var(--surface-color); /* Já usa a variável, deve funcionar */
     color: var(--text-color); /* Já usa a variável, deve funcionar */
     max-height: calc(100vh - env(safe-area-inset-top, 0) - env(safe-area-inset-bottom, 0) - 20px); /* Limit height to fit viewport with some margin */
     overflow-y: auto; /* Add scroll to overlay content if it's too tall */
}

/* Style for the Close Reader Controls button */
#reader-controls-overlay-mobile .close-controls {
     position: absolute;
     top: 10px;
     right: 10px;
     padding: 5px;
     border: none;
     background: none;
     /* --- Definir a cor para danger --- */
     color: var(--danger-color); /* Set the icon/text color to danger */
     /* Adiciona transição para a cor */
     transition: color 0.2s ease-in-out, opacity 0.2s ease-in-out;
}
/* Optional: Add subtle hover/active effects using opacity */
#reader-controls-overlay-mobile .close-controls:hover {
     opacity: 0.8; /* Slightly reduce opacity on hover */
     background: none; /* Ensure no background change */
     color: var(--danger-color); /* Keep the danger color explicitly */
}
 #reader-controls-overlay-mobile .close-controls:active {
     opacity: 0.6; /* Reduce opacity more on active */
     background: none;
     box-shadow: none;
     color: var(--danger-color); /* Keep the danger color explicitly */
 }


#reader-controls-overlay-mobile .control-group {
     /* Same styles as sidebar, but adapted to column layout */
     margin-bottom: 0; /* The gap already creates space */
     border-bottom: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
     padding-bottom: 15px;
     margin-bottom: 15px;
}
#reader-controls-overlay-mobile .control-group:last-child {
     border-bottom: none;
     padding-bottom: 0;
     margin-bottom: 0;
}
#reader-controls-overlay-mobile .control-row {
    /* Same styles as sidebar */
    margin-bottom: 8px;
}
#reader-controls-overlay-mobile .control-row:last-child {
    margin-bottom: 0;
}

/* Garante que os elementos de controle dentro do overlay mobile tenham estilos corretos */
#reader-controls-overlay-mobile .reader-speed-slider,
#reader-controls-overlay-mobile .reader-speed-number-input,
#reader-controls-overlay-mobile .reader-transpose-indicator,
#reader-controls-overlay-mobile .reader-font-size-indicator,
#reader-controls-overlay-mobile .reader-speed-value {
    /* Estilos já definidos acima pelas classes globais .reader-... */
    /* Eles já usam variáveis, então devem funcionar */
}


/* --- New Fixed Bottom Control Bar (Reader) --- */
#reader-bottom-controls {
    position: fixed;
    bottom: 0; /* Fix to the bottom */
    left: 0;
    right: 0;
    height: var(--reader-bottom-controls-height); /* Height */
    background: var(--surface-color); /* Já usa a variável, deve funcionar */
    box-shadow: 0 -2px 5px var(--shadow-color); /* Já usa a variável, deve funcionar */
    display: flex; /* Flexbox layout to align buttons */
    justify-content: space-around; /* Distribute items evenly */
    align-items: center;
    padding: 0 10px;
    box-sizing: border-box;
    z-index: 10; /* Acima do conteúdo do reader, abaixo do overlay de controles */
     /* Initially hidden (desktop), will be shown only on mobile reader screen */
     display: none;
     /* Add padding-bottom to account for safe area bottom */
     padding-bottom: env(safe-area-inset-bottom);
     height: calc(var(--reader-bottom-controls-height) + env(safe-area-inset-bottom)); /* Adjust height to include safe area */
}

#reader-bottom-controls .button.icon-button {
     padding: 8px; /* Maintain icon-button padding */
     font-size: 1.2em; /* Larger icon for visibility */
     border: none; /* Buttons in this fixed bar have no border */
     background: none; /* Transparent background */
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
     transition: color 0.2s;
     /* Flexbox for buttons in the bottom bar */
      flex-grow: 1;
      flex-basis: 0; /* Allow them to grow equally */
      justify-content: center; /* Center the icon */
}
#reader-bottom-controls .button.icon-button:hover {
    color: var(--text-color); /* Já usa a variável, deve funcionar */
    background: none; /* Ensure no background on hover */
}
#reader-bottom-controls .button.icon-button:active {
     color: var(--accent-color); /* Já usa a variável, deve funcionar */
     background: none;
     box-shadow: none;
}

/* Specific style for speed indicator within the bottom bar */
#reader-bottom-controls .reader-speed-value {
     padding: 5px 10px; /* Less padding than icon buttons */
     /* Removido borda, background, e min-width para um visual mais clean na barra */
     border: none;
     background: none;
     min-width: auto; /* Remove largura mínima */
     font-size: 1em; /* Slightly larger font */
     font-weight: bold;
     color: var(--text-color); /* Já usa a variável, deve funcionar */
      /* Flexbox adjustments */
     flex-grow: 0; /* Don't grow */
     flex-shrink: 0; /* Don't shrink */
}

/* Hide slider and number input in the bottom bar (using +/- buttons instead) */
#reader-bottom-controls .reader-speed-slider,
#reader-bottom-controls .reader-speed-number-input {
     display: none;
}


/* Modals */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.6); /* Fundo do overlay, não muda com tema */
    z-index: 25;
    display: none;
}

.modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-width: 90%; /* Garante que o modal não seja muito largo em telas pequenas */
    width: 400px; /* Largura padrão para desktop/tablet */
    padding: 20px;
    box-sizing: border-box;
    z-index: 30;
    display: none;
    /* Card style já aplicado */
}

.modal h3 {
     margin-top: 0;
     margin-bottom: 20px;
     text-align: center;
     color: var(--text-color); /* Já usa a variável, deve funcionar */
}

.modal .input-group {
     margin-bottom: 15px;
}

.modal-actions {
    margin-top: 20px;
    display: flex;
    justify-content: flex-end;
    gap: 10px;
}
.modal-actions .button {
     padding: 8px 15px;
     font-size: 0.9em;
}

#upload-file-list {
     margin-top: 15px;
     border-top: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
     padding-top: 10px;
     max-height: 150px; /* Limit height so it doesn't get too long */
     overflow-y: auto; /* Add scroll if list is long */
     color: var(--text-color); /* Já usa a variável, deve funcionar */
}

.upload-file-item {
    margin-bottom: 10px;
    padding-bottom: 10px;
    border-bottom: 1px dashed var(--border-color); /* Já usa a variável, deve funcionar */
}
.upload-file-item:last-child {
     border-bottom: none;
     padding-bottom: 0;
}

.upload-file-item label {
     display: block;
     font-size: 0.9em;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
     margin-bottom: 5px;
}
.upload-file-item input[type="text"] {
     width: 100%;
     box-sizing: border-box;
     font-size: 1em;
     margin-bottom: 5px;
     padding: 5px 10px;
}
.upload-file-item p {
     margin: 0 0 5px 0;
     font-size: 0.9em;
     color: var(--text-color); /* Já usa a variável, deve funcionar */
}


#add-song-library-list {
    max-height: 300px; /* Maximum height */
    overflow-y: auto; /* Add scroll if list is long */
    margin-top: 15px;
}
#add-song-library-list li {
     display: flex;
     justify-content: space-between;
     align-items: center;
     padding: 10px 0; /* Smaller vertical padding */
     border-bottom: 1px solid var(--border-color); /* Já usa a variável, deve funcionar */
     cursor: pointer;
}
#add-song-library-list li:last-child {
     border-bottom: none;
}
#add-song-library-list li:hover {
     background-color: var(--bg-color); /* Já usa a variável, deve funcionar */
}

#add-song-library-list li .song-info {
    flex-grow: 1;
     margin-right: 10px;
}
#add-song-library-list li h3 {
     margin: 0;
     font-size: 1em;
}
#add-song-library-list li p {
     margin: 0;
     font-size: 0.8em;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
}


/* Scrollbar Styling (Opcional) */
::-webkit-scrollbar {
  width: 8px;
   height: 8px; /* For horizontal scrollbars */
}
::-webkit-scrollbar-track {
  background: var(--bg-color); /* Já usa a variável, deve funcionar */
}
::-webkit-scrollbar-thumb {
  background: var(--text-secondary); /* Já usa a variável, deve funcionar */
  border-radius: 4px;
}
::-webkit-scrollbar-thumb:hover {
  background: var(--accent-color); /* Já usa a variável, deve funcionar */
}


/* --- Fixed Bottom Navigation (Main) --- */
#bottom-nav {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: var(--footer-height); /* Height of the navigation bar */
    background: var(--surface-color); /* Já usa a variável, deve funcionar */
    box-shadow: 0 -2px 5px var(--shadow-color); /* Já usa a variável, deve funcionar */
    display: flex;
    justify-content: space-around; /* Distribute buttons evenly */
    align-items: center;
    padding: 0 10px;
    z-index: 10; /* Ensure it's above content */
     /* Add padding-bottom to account for safe area bottom */
     padding-bottom: env(safe-area-inset-bottom);
     height: calc(var(--footer-height) + env(safe-area-inset-bottom)); /* Adjust height to include safe area */
}

.nav-btn {
     flex-grow: 1; /* Allow each button to occupy equal space */
     flex-basis: 0; /* Flexible base */
     text-align: center;
     display: flex;
     flex-direction: column; /* Icon and text in a column */
     align-items: center;
     padding: 5px;
     color: var(--text-secondary); /* Já usa a variável, deve funcionar */
     border: none;
     background: none;
     cursor: pointer;
     transition: color 0.2s;
     font-family: inherit; /* Use the same font as body */
}

.nav-btn:hover {
     color: var(--text-color); /* Já usa a variável, deve funcionar */
}

.nav-btn.active {
     color: var(--accent-color); /* Já usa a variável, deve funcionar */
     /* font-weight: bold; optional, but might distort layout */
}

.nav-btn i {
     font-size: 1.2em; /* Icon size */
}

.nav-btn span {
     font-size: 0.7em; /* Text size */
     margin-top: 3px; /* Space between icon and text */
     white-space: nowrap; /* Prevent text wrapping */
     overflow: hidden;
     text-overflow: ellipsis;
}


/* Responsive Styles - Applied on screens with max-width 768px (mobile/small tablet) */
@media (max-width: 768px) { /* Mobile breakpoint */

    /* Adjust fixed element heights for mobile */
    :root {
        --header-height: 50px;
        /* --footer-height is already 60px */
        --reader-bottom-controls-height: 60px;
        --safe-area-top-buffer: 15px; /* Keep buffer */
        --safe-area-bottom-buffer: 10px; /* Keep buffer */
    }

    /* Adjust #app padding-bottom for the main footer height (which includes safe area bottom) */
     #app {
          padding-bottom: calc(var(--footer-height) + env(safe-area-inset-bottom));
     }

    /* Adjust external margins of cards in general */
    .card {
        margin: 10px;
        padding: 15px; /* Reduce inner padding */
    }

    /* Adjust headers - height calculated in :root */
    .main-header, .reader-header {
         height: var(--header-height); /* Height includes safe area top */
         padding: 0 10px; /* Smaller horizontal padding */
         padding-top: env(safe-area-inset-top); /* Add safe area inset to top */
         height: calc(var(--header-height) + env(safe-area-inset-top)); /* Recalculate height */
    }

     /* Adjust padding-top of screens - handled by child elements now */
     .screen {
          padding-top: 0;
          padding-bottom: 0;
     }
     /* Login screen doesn't have headers/footers, remove padding */
     #login-screen {
         padding-top: 0;
         padding-bottom: 0;
     }
      /* Reader screen has header and bottom bar (both including safe area) */
     #reader-screen {
          padding-top: 0; /* Handled by reader-layout */
          padding-bottom: calc(var(--reader-bottom-controls-height) + env(safe-area-inset-bottom)); /* Space for reader bottom bar + safe area */
     }

     /* #main-app needs padding-top to clear the header (which includes safe area top) */
     #main-app {
          padding-top: calc(var(--header-height) + env(safe-area-inset-top));
     }


     /* FIX: Adjust padding for scrollable content areas to account for browser UI */
     /* #screen-content is the scrollable area within main-app */
     #screen-content {
          /* Existing padding-bottom to clear the fixed main footer (already handled by #app) */
          padding-bottom: var(--footer-height); /* Keep the space for the footer */
          /* Existing padding-top was 10px. This creates the margin below the header. */
          /* Add safe area inset and a buffer to this padding. */
          padding-top: calc(10px + env(safe-area-inset-top) + var(--safe-area-top-buffer)); /* original margin + safe area + buffer */
          padding-left: 5px; /* Adjust horizontal padding for mobile screen-page */
          padding-right: 5px;
     }

     /* Reader layout is below the header */
     .reader-layout {
         flex-direction: column; /* Stack sidebar and content */
         padding: 0 5px 5px 5px; /* Padding around layout */
         /* Add padding-top to push content below the header (which includes safe area top) */
         padding-top: calc(var(--header-height) + env(safe-area-inset-top));
     }

     /* Hide native sidebar on mobile */
     #reader-sidebar {
         display: none;
     }

     /* Show the controls toggle button in the header on mobile */
     /* This button controls only the controls OVERLAY, not the fixed bottom bar */
     .controls-toggle-mobile {
         display: flex; /* Use flex to center the icon */
     }

     /* Reader content area (#reader-content-area) is the scrollable text area */
     #reader-content-area {
          margin: 0; /* Remove external margins in stacked layout */
          flex-grow: 1; /* Ensure text area fills space */
          height: auto; /* Allow height to be determined by flexbox */
          overflow-y: auto; /* Ensure text area is scrollable */
          /* Adjust padding, specifically adjusting top and bottom */
          /* Top: original 10px + safe area + buffer */
          padding-top: calc(10px + env(safe-area-inset-top) + var(--safe-area-top-buffer));
          /* Bottom: reader bottom controls height + safe area bottom + buffer */
          padding-bottom: calc(var(--reader-bottom-controls-height) + env(safe-area-inset-bottom) + var(--safe-area-bottom-buffer));
          padding-left: 15px; /* Keep existing horizontal padding */
          padding-right: 15px; /* Keep existing horizontal padding */
     }

     /* Reader Controls Overlay (Mobile) */
     /* Displayed over everything else */
      #reader-controls-overlay-mobile {
          /* display: none; default */
          /* Positioning is relative to safe area - top/bottom set above */
      }
       #reader-controls-overlay-mobile .controls-bar {
           /* Position relative to the overlay's safe area bounds */
           bottom: var(--safe-area-bottom-buffer); /* Margin from the bottom safe area edge */
           /* Max height adjusted to fit within the safe area */
            max-height: calc(100vh - env(safe-area-inset-top, 0) - env(safe-area-inset-bottom, 0) - 20px); /* Limit height */
            overflow-y: auto; /* Make controls scrollable if they overflow */
       }


     /* Ensure the fixed bottom control bar appears in the reader on mobile */
     #reader-bottom-controls {
         display: flex; /* Show the bottom control bar */
         height: var(--reader-bottom-controls-height); /* Height includes safe area bottom */
         padding-bottom: env(safe-area-inset-bottom); /* Add safe area inset to bottom */
         height: calc(var(--reader-bottom-controls-height) + env(safe-area-inset-bottom)); /* Recalculate height */
     }


     /* Adjust external margins for screen-page content containers */
     .screen-page {
          padding: 0 5px; /* Smaller horizontal padding */
          /* Removed padding-bottom from here */
     }
     .search-bar {
          margin: 10px 5px 20px 5px; /* Adjust search bar margin */
     }
     .page-actions {
          margin: 10px 5px; /* Adjust page actions margin */
          justify-content: center; /* Center buttons on small screens */
           width: calc(100% - 10px); /* Adjust width for 5px screen-page padding */
     }
     .page-actions .button.full-width {
          width: 100%; /* Ensure full-width on mobile */
     }

     #event-detail-screen-content > .button {
          margin: 10px 0 10px 5px; /* Adjust back button margin */
     }
     #event-detail-screen-content h2,
     #event-detail-screen-content p {
          margin-left: 15px; /* Adjust detail text margin */
          margin-right: 15px;
     }
     .settings-group .setting-item {
          flex-direction: column; /* Stack settings items */
          align-items: flex-start; /* Align stacked items to the left */
     }
      .settings-group .setting-item span {
           margin-right: 0;
           margin-bottom: 5px; /* Space between label and control */
      }
      .settings-group .setting-item input[type="number"],
      .settings-group .setting-item select,
       .settings-group .setting-item input[type="checkbox"],
       .settings-item .button:not(.full-width) { /* Apply to specific button types */
           width: 100%; /* Controls occupy full width */
           box-sizing: border-box;
            margin-left: 0; /* Remove extra margin */
       }
        .settings-group .setting-item input[type="checkbox"] {
             width: auto; /* Checkbox should not be 100% wide */
              margin-left: 0;
        }
         /* Ensure full-width button stays full-width */
        .settings-group .setting-item .button.full-width {
            width: 100%;
        }

     /* Adjust FAB position to respect footer height (which includes safe area bottom) */
     .fab {
          bottom: calc(var(--footer-height) + 10px); /* Adjust bottom margin */
     }
}

/* Styles for Tablet/Desktop (min-width 769px) */
@media (min-width: 769px) { /* Desktop breakpoint */
    /* Ensure fixed element heights are correct */
    :root {
        --header-height: 60px;
        --footer-height: 60px;
        --reader-bottom-controls-height: 60px; /* Not displayed, but keep definition */
         --safe-area-top-buffer: 0px; /* No extra buffer needed */
         --safe-area-bottom-buffer: 0px; /* No extra buffer needed */
    }

     /* Adjust #app padding-bottom for the main footer */
     #app {
          padding-bottom: var(--footer-height);
     }

     /* Adjust headers - height calculated in :root */
    .main-header, .reader-header {
         height: var(--header-height); /* No safe area needed */
         padding-top: 0; /* No safe area inset */
         height: var(--header-height); /* Reset height */
    }

     /* Adjust padding-top of screens - handled by child elements now */
     .screen {
          padding-top: 0;
          padding-bottom: 0;
     }

     /* #main-app needs padding-top to clear the header */
     #main-app {
          padding-top: var(--header-height);
     }

     /* #screen-content is the scrollable area within main-app */
     #screen-content {
          /* Existing padding-bottom to clear the fixed main footer (already handled by #app) */
          padding-bottom: var(--footer-height); /* Keep the space for the footer */
          /* Existing padding-top was 10px. Keep it. */
          padding-top: 10px;
          padding-left: 10px; /* Ensure left/right are back to desktop values */
          padding-right: 10px;
     }


    /* Reader layout is below the header */
     .reader-layout {
         padding: 10px; /* Padding around sidebar and content */
         box-sizing: border-box;
         /* Add padding-top to push content below the header */
          padding-top: var(--header-height);
     }

    #reader-sidebar {
         display: block; /* Show sidebar */
         margin: 0 10px 0 0; /* Right margin */
         flex-basis: 250px; /* Base width */
         flex-grow: 0; /* Don't grow */
         flex-shrink: 0; /* Don't shrink */
    }
     #reader-content-area {
         margin: 0; /* Removed external margin */
         flex-grow: 1; /* Occupy rest of horizontal space */
         padding: 10px 15px; /* Default padding (top, right, bottom, left) */
         padding-bottom: 15px; /* Minimal bottom padding */
         overflow-y: auto;
     }
     .controls-toggle-mobile {
         display: none; /* Hide toggle button */
     }
      #reader-controls-overlay-mobile {
           display: none !important; /* Garante que o overlay mobile esteja escondido */
      }

     /* Ensure the fixed bottom control bar does NOT appear in the reader on desktop */
     #reader-bottom-controls {
         display: none; /* Hide bottom control bar */
     }

      /* Adjust FAB position to respect footer height */
     .fab {
          bottom: calc(var(--footer-height) + 10px); /* Adjust bottom margin */
     }
}